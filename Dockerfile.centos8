FROM centos:8

# Build needs plenty of RAM
# Check: [[ "`free --total | awk '/Total/ { print $4 }'`" -gt "5000000" ]] || echo "Not enough RAM to build image"

# Install tools needed for development
RUN yum update -y && \
    yum upgrade -y 

# && \
RUN yum install -y gcc gcc-c++ make cmake autoconf automake libtool python3 git openssl-devel m4 python3-pip && pip3 install cython

# Copy needed source
RUN mkdir /src
ADD CMakeLists.txt FBGenCMakeBuildInfo.cmake ThriftLibrary.cmake /src/
COPY build /src/build
COPY openr /src/openr
COPY example_openr.conf /etc/openr.conf

# Build OpenR + Dependencies via cmake
RUN cd /src && build/build_openr.sh && chmod 644 /etc/openr.conf
RUN mkdir /opt/bin && cp /src/build/docker_openr_helper.sh /opt/bin

# Install `breeze` OpenR CLI, skipped python3*-Cython (3.8)
RUN yum install -y gcc-toolset-10-gcc-c++ # We need g++-10 or higher for coroutines which are used in folly::coro
COPY build/cython_compile.py /src/build/cython_compile.py

# Fix Python paths on CentOS
RUN sed -i 's/python3/python3.6/g' /src/build/cython_compile.py
RUN sed -i 's|/usr/lib/python3/|/usr/local/lib64/python3.6/|g' /src/build/build_breeze.sh
RUN sed -i 's|/usr/lib/python3.6/dist-packages|/usr/local/lib64/python3.6/site-packages|g' /src/build/cython_compile.py
RUN ln -sf /usr/bin/cython-3.8 /usr/bin/cython3

# COPY configerator /src/ ??
RUN git clone https://github.com/cython/cython
RUN cd /src && build/build_breeze.sh
RUN cp -r /src/build/lib.linux-x86_64-3.8 /breeze-build

# Cleanup all we can to keep container as lean as possible
# TODO: We can use Dockerfile stages instead
RUN yum remove -y gcc gcc-c++ make cmake autoconf automake libtool git openssl-dev m4 && \
    yum autoremove -y && \
    rm -rf /src /tmp/* 

CMD ["/opt/bin/docker_openr_helper.sh"]
# Expose OpenR Thrift port
EXPOSE 2018/tcp
