FROM centos:8

# Build needs plenty of RAM
# Check: [[ "`free --total | awk '/Total/ { print $4 }'`" -gt "5000000" ]] || echo "Not enough RAM to build image"

# Install tools needed for development
RUN yum update -y && \
    yum upgrade -y 

# && \
RUN yum install -y gcc gcc-c++ make cmake autoconf automake libtool python3 git openssl-devel m4 python3-pip && pip3 install cython

# Copy needed source
RUN mkdir /src
ADD CMakeLists.txt FBGenCMakeBuildInfo.cmake ThriftLibrary.cmake /src/
COPY build /src/build
COPY openr /src/openr
COPY example_openr.conf /etc/openr.conf

# Build OpenR + Dependencies via cmake
RUN cd /src && build/build_openr.sh && chmod 644 /etc/openr.conf
RUN mkdir /opt/bin && cp /src/build/docker_openr_helper.sh /opt/bin

# We need g++-10 or higher for coroutines which are used in folly::coro
RUN yum install -y gcc-toolset-10-gcc-c++ && \
    ln -sf /usr/bin/gcc /usr/bin/gcc-10 && \
    ln -sf /usr/bin/g++ /usr/bin/g++-10

# Alternatively build gcc from source - takes a LONG time
# ENV GCC_VERSION=11.2.0
# RUN dnf update -y && \
#    dnf -y group install "Development Tools" && \
#    yum config-manager --set-enabled powertools && \
#    dnf -y install libmpc-devel && \
#    curl -O http://gnu.mirror.constant.com/gcc/gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.gz && \
#    tar zxf gcc-$GCC_VERSION.tar.gz && \
#    mkdir gcc-build && cd gcc-build && \
#    ../gcc-$GCC_VERSION/configure --enable-languages=c,c++ --disable-multilib && \
#    make -j$(nproc) && make install && \
#    ln -sf /usr/local/bin/gcc /usr/bin/gcc-10 && \
#    ln -sf /usr/local/bin/g++ /usr/bin/g++-10

# Install `breeze` OpenR CLI, needs python38-Cython (3.8)
RUN yum install -y python38-Cython python38-devel
COPY build/cython_compile.py /src/build/cython_compile.py

# Fix Python paths on CentOS
RUN sed -i 's|/usr/lib/python3/dist-packages|/usr/local/lib64/python3.6/site-packages|g' /src/build/build_breeze.sh
RUN sed -i 's|-I\.|-I. -I/usr/include/python3.8|g' /src/build/build_breeze.sh
RUN sed -i 's|"\."|".","/usr/include/python3.8"|g' /src/openr/py/setup.py
RUN sed -i 's|/usr/lib/python3.6/dist-packages|/usr/local/lib64/python3.6/site-packages|g' /src/build/cython_compile.py
RUN sed -i 's|cython3|/usr/local/bin/cython|g' /src/build/cython_compile.py

# Fix path bug in some random file
RUN sed -i 's|thrift/lib/thrift/annotation/scope.thrift|scope.thrift|g' \
 /tmp/fbcode_builder_getdeps-ZsrcZbuildZfbcode_builder-root/repos/github.com-facebook-fbthrift.git/thrift/lib/thrift/annotation/cpp.thrift

COPY configerator/ /src/neteng-thrift/configerator/
RUN git clone https://github.com/cython/cython
RUN cd /src && build/build_breeze.sh
RUN cp -r /src/build/lib.linux-x86_64-3.8 /breeze-build

# Cleanup all we can to keep container as lean as possible
# TODO: We can use Dockerfile stages instead
RUN yum remove -y gcc gcc-c++ make cmake autoconf automake libtool git openssl-dev m4 gcc-toolset-10-gcc-c++ python38-Cython python38-devel && \
    yum autoremove -y && \
    rm -rf /src /tmp/* /var/cache/yum

CMD ["/opt/bin/docker_openr_helper.sh"]
# Expose OpenR Thrift port
EXPOSE 2018/tcp
